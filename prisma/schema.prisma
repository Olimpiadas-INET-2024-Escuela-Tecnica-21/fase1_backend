generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model shopping_cart {
  id       Int                     @id @default(autoincrement())
  clients  client?
  products shopping_cart_product[]
}

model profile {
  id       Int             @id @default(autoincrement())
  name     String
  clients  client[]
  managers sales_manager[]
  sellers  seller[]
}

model client {
  id             Int           @id @default(autoincrement())
  username       String
  email          String        @unique
  password       String
  address        String
  shoppingCartId Int           @unique
  profileId      Int
  profile        profile       @relation(fields: [profileId], references: [id])
  shoppingCart   shopping_cart @relation(fields: [shoppingCartId], references: [id])
  orders         order[]
}

model seller {
  id        Int     @id @default(autoincrement())
  username  String
  password  String
  profileId Int
  orders    order[]
  profile   profile @relation(fields: [profileId], references: [id])
}

model sales_manager {
  id        Int     @id @default(autoincrement())
  username  String
  password  String
  profileId Int
  orders    order[]
  profile   profile @relation(fields: [profileId], references: [id])
}

model product {
  id          Int                     @id @default(autoincrement())
  name        String
  category    String
  stock       Int
  price       Float
  description String?
  orders      product_order[]
  carts       shopping_cart_product[]
}

model order {
  id             Int             @id @default(autoincrement())
  date           DateTime
  state          String
  totalPrice     Float
  check          Boolean
  paymentMethod  String
  clientId       Int
  sellerId       Int
  salesManagerId Int
  client         client          @relation(fields: [clientId], references: [id])
  salesManager   sales_manager   @relation(fields: [salesManagerId], references: [id])
  seller         seller          @relation(fields: [sellerId], references: [id])
  products       product_order[]
}

model shopping_cart_product {
  productId      Int
  shoppingCartId Int
  product        product       @relation(fields: [productId], references: [id])
  shoppingCart   shopping_cart @relation(fields: [shoppingCartId], references: [id])

  @@id([productId, shoppingCartId])
}

model product_order {
  productId Int
  orderId   Int
  order     order   @relation(fields: [orderId], references: [id])
  product   product @relation(fields: [productId], references: [id])

  @@id([productId, orderId])
}
